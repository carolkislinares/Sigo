@model RegisterModel
@using System.Text.Encodings.Web
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.Register").Text);
    //page class
    Html.AppendPageCssClassParts("html-registration-page");
}
@section left
{
    <div class="imagen-registro">
        <img src="~/images/image.jpg" id="imagen-registro">
    </div>

}

@section accountPageTitle
{
    <div class="page-title">
        <h1>@T("Account.Register")</h1>
    </div>
}

@*@{
        Layout = "_ColumnsOne";

        //title
        Html.AddTitleParts(T("PageTitle.Register").Text);
        //page class
        Html.AppendPageCssClassParts("html-registration-page");
    }
*@
@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <script type="text/javascript" asp-location="Footer">
         //inhabilitar();
            $(document).ready(function () {
                $("#@Html.IdFor(model => model.CountryId)").on('change', function () {
                    var selectedItem = $(this).val();
                    var ddlStates = $("#@Html.IdFor(model => model.StateProvinceId)");
                    var statesProgress = $("#states-loading-progress");
                    statesProgress.show();
                    $.ajax({
                        cache: false,
                        type: "GET",
                        url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                        data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                        success: function (data) {
                            ddlStates.html('');
                            $.each(data, function (id, option) {
                                ddlStates.append($('<option></option>').val(option.id).html(option.name));
                            });
                            statesProgress.hide();
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert('Failed to retrieve states.');
                            statesProgress.hide();
                        }
                    });
                });
            });
    </script>
}
<div class="page registration-page">
    @*<div class="page-title">
            <h1>@T("Account.Register")</h1>
        </div>*@
    <div asp-validation-summary="ModelOnly" class="message-error"></div>

    <div class="page-body">
        <form asp-route="Register" asp-route-returnurl="@Context.Request.Query[" ReturnUrl"]" method="post" onsubmit="return checkForm()">
            <div class="fieldset">
                <div class="title">
                    <strong>@T("Account.YourPersonalDetails")</strong>

                </div>
                <div class="form-fields">
                    @if (Model.GenderEnabled)
                    {
                        <div class="inputs">
                            <label>@T("Account.Fields.Gender"):</label>
                            <div class="gender">
                                <span class="male">
                                    <input type="radio" asp-for="Gender" value="M" checked="@(Model.Gender == " M")" id="gender-male" />
                                    <label class="forcheckbox" for="gender-male">@T("Account.Fields.Gender.Male")</label>
                                </span>
                                <span class="female">
                                    <input type="radio" asp-for="Gender" value="F" checked="@(Model.Gender == " F")" id="gender-female" />
                                    <label class="forcheckbox" for="gender-female">@T("Account.Fields.Gender.Female")</label>
                                </span>
                            </div>
                        </div>
                    }
                    <div class="inputs">
                        <label asp-for="FirstName" asp-postfix=":"></label>
                        <input asp-for="FirstName" onblur="alphanumeric(this,'El')" />
                        <nop-required />
                        <span asp-validation-for="FirstName" id="FirstNameValidate"></span>
                    </div>
                    <div class="inputs">
                        <label asp-for="LastName" asp-postfix=":"></label>
                        <input asp-for="LastName" onblur="alphanumeric(this,'El')" />
                        <nop-required />
                        <span asp-validation-for="LastName" id="LastNameValidate"></span>
                    </div>
                    @if (Model.DateOfBirthEnabled)
                    {
                        <div class="inputs date-of-birth">
                            <label>@T("Account.Fields.DateOfBirth"):</label>
                            <nop-date-picker asp-day-name="@Html.NameFor(x => x.DateOfBirthDay)"
                                             asp-month-name="@Html.NameFor(x => x.DateOfBirthMonth)"
                                             asp-year-name="@Html.NameFor(x => x.DateOfBirthYear)"
                                             asp-begin-year="@(DateTime.Now.Year - 110)"
                                             asp-end-year="@(DateTime.Now.Year)"
                                             asp-selected-day="@Model.DateOfBirthDay"
                                             asp-selected-month="@Model.DateOfBirthMonth"
                                             asp-selected-year="@Model.DateOfBirthYear" />
                            @if (Model.DateOfBirthRequired)
                            {
                                <nop-required />
                            }
                            <span asp-validation-for="DateOfBirthDay"></span>
                            <span asp-validation-for="DateOfBirthMonth"></span>
                            <span asp-validation-for="DateOfBirthYear"></span>
                        </div>
                    }
                    <div class="inputs">
                        <label asp-for="Email" asp-postfix=":"></label>
                        <input asp-for="Email" />
                        <nop-required />
                        <span asp-validation-for="Email"></span>
                    </div>
                    @if (Model.EnteringEmailTwice)
                    {
                        <div class="inputs">
                            <label asp-for="ConfirmEmail" asp-postfix=":"></label>
                            <input asp-for="ConfirmEmail" />
                            <nop-required />
                            <span asp-validation-for="ConfirmEmail"></span>
                        </div>
                    }
                    @if (Model.UsernamesEnabled)
                    {
                        <div class="inputs">
                            <label asp-for="Username" asp-postfix=":"></label>
                            <input asp-for="Username" />
                            <nop-required />
                            <span asp-validation-for="Username"></span>
                            @if (Model.CheckUsernameAvailabilityEnabled)
                            {
                                @await Html.PartialAsync("_CheckUsernameAvailability")
                            }
                        </div>

                    }
                </div>
            </div>

            @if (Model.NewsletterEnabled || Model.CustomerAttributes.Count > 0)
            {
                <div class="fieldset">
                    <div class="title">
                        <strong>@T("Account.Options")</strong>
                    </div>
                    <div class="form-fields">
                        @if (Model.NewsletterEnabled)
                        {
                            <div class="inputs">
                                <input asp-for="Newsletter" />
                                <label asp-for="Newsletter"></label>
                                <span asp-validation-for="Newsletter"></span>
                            </div>
                        }
                        @if (Model.CustomerAttributes.Count > 0)
                        {
                            @await Html.PartialAsync("_CustomerAttributes", Model.CustomerAttributes)
                        }
                    </div>
                </div>
            }
            @if (Model.CompanyEnabled || Model.DisplayVatNumber)
            {
                <div class="fieldset">
                    <div class="title">
                        <strong>@T("Account.CompanyDetails")</strong>
                    </div>
                    <div class="form-fields">
                        @if (Model.CompanyEnabled)
                        {
                            <div class="inputs">
                                <label asp-for="Company" asp-postfix=":"></label>
                                <input asp-for="Company" />
                                <nop-required />
                                <span asp-validation-for="Company"></span>
                            </div>
                        }
                        @if (Model.DisplayVatNumber)
                        {
                            <div class="inputs">
                                <label asp-for="VatNumber" asp-postfix=":"></label>
                                <input asp-for="VatNumber" />
                                <span class="vat-note"><em>@T("Account.Fields.VatNumber.Note")</em></span>
                            </div>
                        }
                    </div>
                </div>
            }
            @if (Model.StreetAddressEnabled ||
         Model.StreetAddress2Enabled ||
         Model.ZipPostalCodeEnabled ||
         Model.CityEnabled ||
         Model.CountyEnabled ||
         Model.CountryEnabled)
            {
                <div class="fieldset">
                    <div class="title">
                        <strong>@T("Account.YourAddress")</strong>
                    </div>
                    <div class="form-fields">
                        @if (Model.StreetAddressEnabled)
                        {
                            <div class="inputs">
                                <label asp-for="StreetAddress" asp-postfix=":"></label>
                                <input asp-for="StreetAddress" onblur="alphanumericAddress(this, 'La')" />
                                @if (Model.StreetAddressRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="StreetAddress" id="StreetAddressValidate"></span>
                            </div>
                        }
                        @if (Model.StreetAddress2Enabled)
                        {
                            <div class="inputs">
                                <label asp-for="StreetAddress2" asp-postfix=":"></label>
                                <input asp-for="StreetAddress2" onblur="alphanumericAddress(this, 'La')" />
                                @if (Model.StreetAddress2Required)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="StreetAddress2" id="StreetAddress2Validate"></span>
                            </div>
                        }
                        @if (Model.ZipPostalCodeEnabled)
                        {
                            <div class="inputs">
                                <label asp-for="ZipPostalCode" asp-postfix=":"></label>
                                <input asp-for="ZipPostalCode" />
                                @if (Model.ZipPostalCodeRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="ZipPostalCode"></span>
                            </div>
                        }
                        @if (Model.CountyEnabled)
                        {
                            <div class="inputs">
                                <label asp-for="County" asp-postfix=":"></label>
                                <input asp-for="County" onblur="alphanumeric(this, 'El')" />
                                @if (Model.CountyRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="County" id="CountyValidate"></span>
                            </div>
                        }
                        @if (Model.CityEnabled)
                        {
                            <div class="inputs">
                                <label asp-for="City" asp-postfix=":"></label>
                                <input asp-for="City" onblur="alphanumeric(this, 'La')" />
                                @if (Model.CityRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="City" id="CityValidate"></span>
                            </div>
                        }
                        @if (Model.CountryEnabled)
                        {
                            <div class="inputs">
                                <label asp-for="CountryId" asp-postfix=":"></label>
                                <select asp-for="CountryId" asp-items="Model.AvailableCountries"></select>
                                @if (Model.CountryRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="CountryId"></span>
                            </div>
                        }
                        @if (Model.CountryEnabled && Model.StateProvinceEnabled)
                        {
                            <div class="inputs">
                                <label asp-for="StateProvinceId" asp-postfix=":"></label>
                                <select asp-for="StateProvinceId" asp-items="Model.AvailableStates"></select>
                                @if (Model.StateProvinceRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="StateProvinceId"></span>
                                <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
                            </div>
                        }
                    </div>
                </div>
            }
            @if (Model.PhoneEnabled || Model.FaxEnabled)
            {
                <div class="fieldset">
                    <div class="title">
                        <strong>@T("Account.YourContactInformation")</strong>
                    </div>
                    <div class="form-fields">
                        @if (Model.PhoneEnabled)
                        {
                            <div class="inputs">
                                <label asp-for="Phone" asp-postfix=":"></label>
                                <input asp-for="Phone" onblur="numberPhone()" />
                                @if (Model.PhoneRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="Phone" id="PhoneValidate"></span>
                            </div>
                        }
                        @if (Model.FaxEnabled)
                        {
                            <div class="inputs">
                                <label asp-for="Fax" asp-postfix=":"></label>
                                <input asp-for="Fax" />
                                @if (Model.FaxRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="Fax"></span>
                            </div>
                        }
                    </div>
                </div>
            }
            @if (Model.AllowCustomersToSetTimeZone)
            {
                <div class="fieldset">
                    <div class="title">
                        <strong>@T("Account.Preferences")</strong>
                    </div>
                    <div class="form-fields">
                        @if (Model.AllowCustomersToSetTimeZone)
                        {
                            <div class="inputs">
                                <label asp-for="TimeZoneId" asp-postfix=":"></label>
                                <select asp-for="TimeZoneId" asp-items="Model.AvailableTimeZones"></select>
                                <span asp-validation-for="TimeZoneId"></span>
                            </div>
                        }
                    </div>
                </div>
            }
            <div class="fieldset">
                <div class="title">
                    <strong>@T("Account.YourPassword")</strong>
                </div>
                <div class="form-fields">
                    <div class="inputs">
                        <label asp-for="Password" asp-postfix=":"></label>
                        <input asp-for="Password" />
                        <nop-required />
                        <span asp-validation-for="Password"></span>
                    </div>
                    <div class="inputs">
                        <label asp-for="ConfirmPassword" asp-postfix=":"></label>
                        <input asp-for="ConfirmPassword" />
                        <nop-required />
                        <span asp-validation-for="ConfirmPassword"></span>
                    </div>
                    @if (Model.DisplayCaptcha)
                    {
                        <div class="captcha-box">
                            <nop-captcha />
                        </div>
                    }
                    @if (Model.HoneypotEnabled)
                    {
                        @Html.Raw(Html.GenerateHoneypotInput())
                    }
                </div>
            </div>

            @if (Model.AcceptPrivacyPolicyEnabled || Model.GdprConsents.Count > 0)
            {
                <div class="fieldset">
                    <div class="form-fields">
                        @if (Model.AcceptPrivacyPolicyEnabled)
                        {
                            <script asp-location="Footer">
                                    $(document).ready(function() {
                                        $('#register-button').on('click', function() {
                                            if ($('#accept-consent').is(':checked')) {
                                                //do some stuff
                                                return true;
                                            } else {
                                                //just show validation errors, don't post
                                                alert('@Html.Raw(JavaScriptEncoder.Default.Encode(T("Account.Fields.AcceptPrivacyPolicy.Required").Text))');
                                                return false;
                                            }
                                        });
                                    });
                            </script>
                            <div class="inputs accept-consent">
                                <input id="accept-consent" type="checkbox" name="accept-consent" />
                                <label for="accept-consent">@T("Account.Fields.AcceptPrivacyPolicy")</label>
                                @if (Model.AcceptPrivacyPolicyPopup)
                                {
                                    <span class="read" id="read-privacyinfo">@T("Account.Fields.AcceptPrivacyPolicy.Read")</span>
                                    <script asp-location="Footer">
                                            $(document).ready(function() {
                                                $('#read-privacyinfo').on('click',
                                                    function(e) {
                                                        displayPopupContentFromUrl(
                                                            '@Url.RouteUrl("TopicPopup", new { SystemName = "privacyinfo" })',
                                                            '@T("Account.Fields.AcceptPrivacyPolicy")');
                                                    });
                                            });
                                    </script>
                                }
                                else
                                {
                                    <a class="read" id="read-privacyinfo" href="@Url.RouteUrl(" Topic", new {SeName=Html.GetTopicSeName("privacyinfo") })">@T("Account.Fields.AcceptPrivacyPolicy.Read")</a>
                                }
                            </div>
                            @foreach (var consent in Model.GdprConsents)
                            {
                                if (consent.IsRequired)
                                {
                                    <script asp-location="Footer">
                                        $(document).ready(function() {
                                           $('#save-info-button').on('click', function() {
                                                if ($('#consent@(consent.Id)').is(':checked')) {
                                                        //do some stuff
                                                        return true;
                                                    } else {
                                                        //just show validation errors, don't post
                                                   alert('@Html.Raw(JavaScriptEncoder.Default.Encode(consent.RequiredMessage))');
                                                        return false;
                                                    }
                                                });
                                        });
                                    </script>
                                }
                                <div class="inputs accept-consent">
                                    <input id="consent@(consent.Id)" type="checkbox" name="consent@(consent.Id)" checked="@consent.Accepted" />
                                    <label for="consent@(consent.Id)">@consent.Message</label>
                                </div>
                            }
                        }
                    </div>
                </div>
            }
            <div class="buttons">
                <input type="submit" id="register-button" class="button-1 register-next-step-button" value="@T(" Account.Register.Button")" name="register-button" />
            </div>
        </form>
        <div class="external-authentication">
            @await Component.InvokeAsync("ExternalMethods", "ExternalAuthentication")
        </div>
    </div>

</div>

<script src="~/js/jquery.mask.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {

            document.getElementById('customer_attribute_1').style.textTransform = "uppercase";
            $('#customer_attribute_8_1').click();
            document.getElementById('CountryId').value = 86;
            var selectedItem = 86;
                    var ddlStates = $("#@Html.IdFor(model => model.StateProvinceId)");
                    var statesProgress = $("#states-loading-progress");
                    statesProgress.show();
                    $.ajax({
                        cache: false,
                        type: "GET",
                        url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                        data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                        success: function (data) {
                            ddlStates.html('');
                            $.each(data, function (id, option) {
                                ddlStates.append($('<option></option>').val(option.id).html(option.name));
                            });
                            statesProgress.hide();
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert('Failed to retrieve states.');
                            statesProgress.hide();
                        }
                    });

        });

        for (var i = 2; i < 6; i++) {
                $(document.getElementsByClassName('custom-attributes')[i]).hide();
        }
       $('#Phone').mask('(0000)000-0000');

        $('#customer_attribute_8_1').click(function () {
            for (var i = 2; i < 7; i++) {
                $(document.getElementsByClassName('custom-attributes')[i]).hide();
            }
            document.getElementById('customer_attribute_1_1').innerHTML = "Cédula";
          
            //Limpia los input
            $("#customer_attribute_5").removeClass("input-validation-error");
            $("#customer_attribute_6").removeClass("input-validation-error");
            $("#customer_attribute_5Validate").removeClass("field-validation-error").addClass("field-validation-valid");
            document.getElementById("customer_attribute_5Validate").innerHTML = ""
            $("#customer_attribute_6Validate").removeClass("field-validation-error").addClass("field-validation-valid");
            document.getElementById("customer_attribute_6Validate").innerHTML = ""
            $("#customer_attribute_1").removeClass("input-validation-error");
            $("#customer_attribute_1Validate").removeClass("field-validation-error").addClass("field-validation-valid");
            document.getElementById("customer_attribute_1Validate").innerHTML = ""

            $("#customer_attribute_1").focus(); 
        })
        $('#customer_attribute_8_2').click(function () {
            for (var i = 2; i < 7; i++) {
                $(document.getElementsByClassName('custom-attributes')[i]).show();
            }

            document.getElementById('customer_attribute_1_1').innerHTML = "R.I.F."
            $("#customer_attribute_1").removeClass("input-validation-error");
            $("#customer_attribute_1Validate").removeClass("field-validation-error").addClass("field-validation-valid");
            document.getElementById("customer_attribute_1Validate").innerHTML = ""

            $("#customer_attribute_1").focus(); 

        })

        function numberPhone() {
            var regexp = /^((\(\d{4}\)?)|(\d{3}-))?\d{3}-\d{4}$/;
            var inputtxt = document.getElementById('Phone').value;
            if (regexp.test(inputtxt)) {
                $("#Phone").removeClass("input-validation-error");
                $("#PhoneValidate").removeClass("field - validation - error").addClass("field - validation - valid");
                document.getElementById("Phone").innerHTML = "";
            }
            else {
                $("#Phone").addClass("input-validation-error");
                $("#PhoneValidate").removeClass("field-validation-valid").addClass("field-validation-error");

                if (document.getElementById("Phone").value.length > 0 && document.getElementById("Phone").value.length != 14) {
                    document.getElementById("PhoneValidate").innerHTML = "El Teléfono es inválido.";
                } else {
                    if (document.getElementById("Phone").value.length == 0)
                        document.getElementById("PhoneValidate").innerHTML = "Se requiere el Teléfono.";
                }
            }
        }
</script>
<script type="text/javascript">

    function alphanumeric(input, articulo) {
        var letters = /^([\s.]?[a-zA-ZñÑáéíóúÁÉÍÓÚ\s]+)+$/;
        if (input.value.match(letters)) {
            $("#" + input.id).removeClass("input-validation-error");
            $("#" + input.id + "Validate").removeClass("field-validation-error").addClass("field-validation-valid");
            document.getElementById(input.id + "Validate").innerHTML = ""
        }
        else {
            if (input.labels != null && input.labels.length > 0) {
                for (var j = 0; j < input.labels.length; j++) {
                    $("#" + input.id).addClass("input-validation-error");
                    $("#" + input.id + "Validate").removeClass("field-validation-valid").addClass("field-validation-error");
                    if ($("#" + input.id).val().length == 0) {
                        if (articulo.toLowerCase() == "el") {
                            document.getElementById(input.id + "Validate").innerHTML = "Se requiere el " + input.labels[j].innerHTML.slice(0, -1) + ".";
                        } else {
                            document.getElementById(input.id + "Validate").innerHTML = "Se requiere la " + input.labels[j].innerHTML.slice(0, -1) + ".";
                        }
                    } else {
                        if (articulo.toLowerCase() == "el") {
                            document.getElementById(input.id + "Validate").innerHTML = articulo + " " + input.labels[j].innerHTML.slice(0, -1) + " es inválido.";
                        } else {
                            document.getElementById(input.id + "Validate").innerHTML = articulo + " " + input.labels[j].innerHTML.slice(0, -1) + " es inválida.";
                        }
                    }
                }
            }
        }
    }

    function alphanumericAddress(input, articulo) {
        var letters = /^([\s.]?[a-zA-ZñÑáéíóúÁÉÍÓÚ0-9\d\#%&*'",.()-_/\s]+)+$/;
        if (input.value.match(letters)) {
            $("#" + input.id).removeClass("input-validation-error");
            $("#" + input.id + "Validate").removeClass("field-validation-error").addClass("field-validation-valid");
            document.getElementById(input.id + "Validate").innerHTML = ""
        }
        else {
            if (input.labels != null && input.labels.length > 0) {
                for (var j = 0; j < input.labels.length; j++) {
                    $("#" + input.id).addClass("input-validation-error");
                    $("#" + input.id + "Validate").removeClass("field-validation-valid").addClass("field-validation-error");
                    if ($("#" + input.id).val().length == 0) {
                        if (articulo.toLowerCase() == "el") {
                            document.getElementById(input.id + "Validate").innerHTML = "Se requiere el " + input.labels[j].innerHTML.slice(0, -1) + ".";
                        } else {
                            document.getElementById(input.id + "Validate").innerHTML = "Se requiere la " + input.labels[j].innerHTML.slice(0, -1) + ".";
                        }
                    } else {
                        if (articulo.toLowerCase() == "el") {
                            document.getElementById(input.id + "Validate").innerHTML = articulo + " " + input.labels[j].innerHTML.slice(0, -1) + " es inválido.";
                        } else {
                            document.getElementById(input.id + "Validate").innerHTML = articulo + " " + input.labels[j].innerHTML.slice(0, -1) + " es inválida.";
                        }
                    }
                }
            }
        }
    }

    function alphanumericCompany(input) {
        var letters = /^([\s.]?[a-zA-Z0-9\d\.\s]+)+$/;
        var numbers = /^[0-9]{6,8}$/;
        var numbersRif = /^[VJGC]{1}[0-9]{7,9}$/;
        var numbersCed = /^[0-9]{6,8}$/;

        var isValid; //se usa para determinar el resultado del match.
        var esRequerido = true; //se usa para determinar si se requiere validar que el campo no este vacio.
        var validar = true; //se usa para determinar si toma en cuenta la validacion.
        var mensaje;
        switch (input.id) {
            case 'customer_attribute_1': {
                //switch (input.value.length) {
                //    case 10: {
                //        isValid = input.value.toUpperCase().match(numbersRif);
                //        break;
                //    }
                //    default: {
                //        if (document.getElementById('customer_attribute_8_2').checked) {
                //            isValid = input.value.toUpperCase().match(numbersRif);
                //        } else {
                //            isValid = input.value.toUpperCase().match(numbersCed);
                //        }
                //        break;
                //    }
                //}
                   if (document.getElementById('customer_attribute_8_2').checked) {
                      isValid = input.value.toUpperCase().match(numbersRif);
                   }
                   else {
                      isValid = input.value.toUpperCase().match(numbersCed);
                    }



                if (isValid == null) {
                    if (document.getElementById('customer_attribute_8_2').checked) {
                        mensaje = "Formato inválido de R.I.F. Por favor verifique";
                    } else {
                        mensaje = " Formato inválido de Cédula. Por favor verifique ";
                    }

                }
                if (input.value.length == 0) {
                    if (document.getElementById('customer_attribute_8_2').checked) {
                        mensaje = " el R.I.F.";
                    } else {
                        mensaje = " la Cédula";
                    }
                }
                break;
            }
            case 'customer_attribute_5': {
                if (document.getElementById('customer_attribute_8_2').checked) {
                    isValid = input.value.match(letters);
                    if (isValid == null) {
                        if (input.value.length == 0) {
                            mensaje = " la Razón Social.";
                        }
                        else {
                            mensaje = "La Razón Social es inválida.";
                        }
                    }
                }
                break;

            }
            case 'customer_attribute_6': {
                if (document.getElementById('customer_attribute_8_2').checked) {
                    isValid = input.value.match(letters);
                    if (isValid == null) {
                        if (input.value.length == 0) {
                            mensaje = " la Razón Comercial.";
                        }
                        else {
                            mensaje = "La Razón Comercial es inválida.";
                        }
                    }
                }
                break;
            }
            default: {
                if (input.value.length > 0) {
                    isValid = input.value.match(numbers);
                    if (isValid == null) {
                        if (input.value.length == 8) {
                            mensaje = "El personal autorizado es inválido. Solo se admite el número de cédula.";
                        } else
                            if (input.value.length < 7) {
                                mensaje = "Mínimo 6 carácteres";
                            } else {
                                if (input.value.length > 8) {
                                    mensaje = "Máximo 8 carácteres";
                                }
                            }
                    }
                    esRequerido = false;
                } else {
                    validar = false;
                }
                break;
            }
        }
        if (validar) {
            if (isValid != null) {
                $("#" + input.id).removeClass("input-validation-error");
                $("#" + input.id + "Validate").removeClass("field-validation-error").addClass("field-validation-valid");
                document.getElementById(input.id + "Validate").innerHTML = ""
            }
            else {
                $("#" + input.id).addClass("input-validation-error");
                $("#" + input.id + "Validate").removeClass("field-validation-valid").addClass("field-validation-error");
                if (esRequerido && document.getElementById(input.id).value.length == 0) {
                    document.getElementById(input.id + "Validate").innerHTML = "Se requiere " + mensaje;
                } else {
                    document.getElementById(input.id + "Validate").innerHTML = mensaje;
                }
            }
        }
    }

    function checkForm(form) {
        searchinputcOMPANY();
        var testElements = document.getElementsByClassName('input-validation-error');
        if (testElements.length > 0) {
            return false;
        }
        return true;
    }

    function searchinputcOMPANY() {
        //var element = document.getElementById("customer_attribute_1").value;
        //if (element.length == 0) {
        //    $("#customer_attribute_1").addClass("input-validation-error");
        //    $("#customer_attribute_1Validate").removeClass("field-validation-valid").addClass("field-validation-error");
        //    document.getElementById("customer_attribute_1Validate").innerHTML = "Nro Documento requerido"
        //}

        if (document.getElementById('customer_attribute_8_2').checked) {
            var element5 = document.getElementById("customer_attribute_5").value;
            if (element5.length == 0) {
                $("#customer_attribute_5").addClass("input-validation-error");
                $("#customer_attribute_5Validate").removeClass("field-validation-valid").addClass("field-validation-error");
                document.getElementById("customer_attribute_5Validate").innerHTML = "La Razón Social es requerida"
            }

            var element6 = document.getElementById("customer_attribute_6").value;
            if (element6.length == 0) {
                $("#customer_attribute_6").addClass("input-validation-error");
                $("#customer_attribute_6Validate").removeClass("field-validation-valid").addClass("field-validation-error");
                document.getElementById("customer_attribute_6Validate").innerHTML = "La Razón comercial es requerida"
            }
        } else {
            document.getElementById("customer_attribute_3").value="";
            document.getElementById("customer_attribute_4").value="";
            document.getElementById("customer_attribute_5").value="";
            document.getElementById("customer_attribute_6").value="";
                
            }
        }
    




</script>