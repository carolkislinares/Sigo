@model TaxTypeSelectorModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Microsoft.AspNetCore.Http
@using System.Net
@inject IWebHelper webHelper
@inject IHttpContextAccessor httpContextAccessor
@{
    var rawUrl = webHelper.GetRawUrl(httpContextAccessor.HttpContext.Request);

    var taxTypes = new List<SelectListItem>();
    taxTypes.Add(new SelectListItem
    {
        Text = T("Tax.Inclusive").Text,
        Value = webHelper.ModifyQueryString(Url.RouteUrl("ChangeTaxType", new { customertaxtype = ((int)TaxDisplayType.IncludingTax) }, webHelper.CurrentRequestProtocol), "returnurl", rawUrl),
        Selected = Model.CurrentTaxType == TaxDisplayType.IncludingTax
    });
    taxTypes.Add(new SelectListItem
    {
        Text = T("Tax.Exclusive").Text,
        Value = webHelper.ModifyQueryString(Url.RouteUrl("ChangeTaxType", new { customertaxtype = ((int)TaxDisplayType.ExcludingTax) }, webHelper.CurrentRequestProtocol), "returnurl", rawUrl),
        Selected = Model.CurrentTaxType == TaxDisplayType.ExcludingTax
    });
}
<div class="tax-display-type-selector desktop">
    <select id="customerTaxType" name="customerTaxType" asp-items="@taxTypes" onchange="setLocation(this.value);"></select>
</div>
<div class="tax-display-type-selector mobile mobile-selector">
    @{
        var selectedTaxTypeName = Model.CurrentTaxType == TaxDisplayType.IncludingTax ? taxTypes[0].Text : taxTypes[1].Text;

        <div class="current-tax-type-selector selector-title">@selectedTaxTypeName</div>

        <div class="current-tax-type-selector-options mobile-collapse">
            <div class="selector-options-item">
                <input type="radio" name="tax-type-selector" id="currency-0" value="@taxTypes[0].Value" onclick="setLocation(this.value);" @if(Model.CurrentTaxType == TaxDisplayType.IncludingTax) { <text>checked="checked"</text>} />
                <label for="currency-0">@taxTypes[0].Text</label>
            </div>

            <div class="selector-options-item">
                <input type="radio" name="tax-type-selector" id="currency-1" value="@taxTypes[1].Value" onclick="setLocation(this.value);" @if(Model.CurrentTaxType == TaxDisplayType.ExcludingTax) { <text>checked="checked"</text>} />
                <label for="currency-1">@taxTypes[1].Text</label>
            </div>
        </div>

    }
</div>