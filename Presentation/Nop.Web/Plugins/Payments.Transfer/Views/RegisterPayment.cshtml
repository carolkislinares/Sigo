@{
    Layout = "";
}
@model Nop.Plugin.Payments.Transfer.Models.PaymentInfoModel
@using Nop.Core.Infrastructure
@using Nop.Services.Orders
@{
    var order = EngineContext.Current.Resolve<IOrderService>().GetOrderById(Model.NroOrden);

}




<div class="page  registration-page">
    <div class="panel-body">
        <form asp-controller="Admin/PaymentTransfer" asp-action="RegisterPayment"
              asp-route-btnId="@Context.Request.Query["btnId"]"
              asp-route-formId="@Context.Request.Query["formId"]" onsubmit="return submitForm()">
            <div class="content-header clearfix">
                <h1 class="pull-left">
                    @if (!string.IsNullOrWhiteSpace(Model.Referencia))
                    {
                        <strong><small style="color:#ff4f60;">@T("Payment.RegisteredPayment")</small></strong>
                    }
                    @if (order.OrderStatusId == 40)
                    {
                        <strong><small style="color:#ff4f60;">@T("Payment.OrderCancel")</small></strong>
                    }
                </h1>
            </div>

            <div class="content">
                <div class="form-fields">
                    <div class="panel-body">
                        <div class="inputs">
                            <input type="hidden" asp-for="IdPayment" />
                            <input type="hidden" asp-for="StatusPayment" />
                            <input type="hidden" asp-for="BancoEmisorId" />
                        </div>
                        <div class="inputs">
                            <label asp-for="NroOrden">@T("Plugins.Payments.Transfer.Fields.Order"):</label>
                            <input type="text" asp-for="NroOrden" readonly autocomplete="off" />
                            <span asp-validation-for="NroOrden"></span>
                        </div>
                        @if (Model.StatusPayment < 30 && order.OrderStatusId < 30)
                        {
                            <div class="inputs">
                                <label asp-for="BancoReceptor">@T("Plugins.Payments.Transfer.Fields.ReceiverBank"):</label>
                                <select asp-for="BancoReceptorId" asp-items="Model.BancoReceptor" class="dropdownlists"></select>
                                <span asp-validation-for="BancoReceptorId"></span>

                            </div>
                            @*<div class="inputs" style="display:none">
                                    <label asp-for="BancoEmisor">@T("Plugins.Payments.Transfer.Fields.IssuingBank"):</label>
                                    <select asp-for="BancoEmisorId" asp-items="Model.BancoEmisor" class="dropdownlists"></select>
                                    <span asp-validation-for="BancoReceptorId"></span>
                                </div>*@
                            <div class="inputs">

                                <label asp-for="Referencia">@T("Plugins.Payments.Transfer.Fields.Reference"):</label>
                                <input type="text" asp-for="Referencia" autocomplete="off" maxlength="10" onblur="onlyNumber()" />
                                <nop-required />
                                <span asp-validation-for="Referencia" id="ReferenciaValidate"></span>

                            </div>
                        }
                        else
                        {
                            <div class="inputs">
                                <label asp-for="BancoReceptor">@T("Plugins.Payments.Transfer.Fields.ReceiverBank"):</label>
                                <select asp-for="BancoReceptorId" asp-items="Model.BancoReceptor" disabled class="dropdownlists"></select>
                                <span asp-validation-for="BancoReceptorId"></span>

                            </div>
                            @*<div class="inputs" style="display:none">
                                    <label asp-for="BancoEmisor">@T("Plugins.Payments.Transfer.Fields.IssuingBank"):</label>
                                    <select asp-for="BancoEmisorId" asp-items="Model.BancoEmisor" readonly class="dropdownlists"></select>
                                    <span asp-validation-for="BancoReceptorId"></span>
                                </div>*@
                            <div class="inputs">

                                <label asp-for="Referencia">@T("Plugins.Payments.Transfer.Fields.Reference"):</label>
                                <input type="text" asp-for="Referencia" autocomplete="off" readonly maxlength="10" />
                                <nop-required />
                                <span asp-validation-for="Referencia" id="ReferenciaValidate"></span>

                            </div>
                        }


                    </div>

                    <div class="buttons">
                        <button type="button" name="back" class="button-1" onclick="setLocation('@(Url.Action("BackOrder", "PaymentTransfer", new {id = Model.NroOrden, Area="Admin"}))')">
                            <i class="fa fa-floppy-o"></i>
                            @T("Admin.Common.Back")
                        </button>
                        @if (Model.StatusPayment < 30 && order.OrderStatusId < 30)
                        {
                            <button type="submit" name="save" class="button-1">
                                <i class="fa fa-floppy-o"></i>
                                @T("Admin.Common.Save")
                            </button>
                        }

                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        document.getElementById("BancoEmisorId").value = $("#BancoReceptorId").val();
    });


    function messageInputVacio(inputtxt) {
        return "Se requiere " + inputtxt + ".";
    }

    $("#BancoReceptorId").on('change', function () {
        document.getElementById("BancoEmisorId").value = $(this).val();
    });



    function onlyNumber() {
        var numbers = /^[0-9]{4,10}$/;
        var inputtxt = document.getElementById("Referencia").value;
        if (numbers.test(inputtxt)) {
            $("#ReferenciaValidate").removeClass("field-validation-error").addClass("field-validation-valid");
            $("#Referencia").removeClass("input-validation-error");
            document.getElementById("ReferenciaValidate").innerHTML = "";
        }
        else {
            $("#Referencia").addClass("input-validation-error");
            $("#ReferenciaValidate").removeClass("field-validation-valid").addClass("field-validation-error");
            if ($("#Referencia").val().length == 0) {
                document.getElementById("ReferenciaValidate").innerHTML = messageInputVacio("la Referencia");
                return;
            }

            if ($("#Referencia").val().length < 8) {
                document.getElementById("ReferenciaValidate").innerHTML = "Mínimo 4 carácteres";
                return;
            } else {
                document.getElementById("ReferenciaValidate").innerHTML = "Solo se admiten números.";
                return;
            }

        }
    }

    function submitForm() {

        var testElements = document.getElementsByClassName('input-validation-error');
        if (testElements.length > 0) {
            return false;
        } return true;

    }

</script>
