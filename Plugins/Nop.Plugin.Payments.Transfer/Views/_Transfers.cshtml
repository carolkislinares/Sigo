@model Nop.Plugin.Payments.Transfer.Models.PaymentTransferSearch
@inject Nop.Core.Domain.Common.AdminAreaSettings adminAreaSettings
@using Nop.Core
@inject IWorkContext workContext

<div asp-validation-summary="All"></div>
@{
    var defaultGridPageSize = adminAreaSettings.DefaultGridPageSize;
    var gridPageSizes = adminAreaSettings.GridPageSizes;
    var WorkingCurrencyCode = workContext.WorkingCurrency.CurrencyCode;
}

@if (ViewBag.RefreshPage == true)
{
    <script>
        try {window.opener.document.forms['@(Context.Request.Query["formId"])'].@(Context.Request.Query["btnId"]).click();}
        catch (e){}
        window.close();

    </script>
}

<div class="panel-group">
    <div class="panel panel-default panel-search">
        <div class="panel-body">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-sm-3">
                            <label asp-for="BancoReceptorId">@T("Plugins.Payments.Transfer.Fields.ReceiverBank")</label>
                        </div>
                        <div class="col-sm-6">
                            <nop-select asp-for="BancoReceptorId" asp-items="Model.BancoReceptor" />
                            <span asp-validation-for="BancoReceptorId"></span>
                        </div>

                    </div>
                    @*<div class="form-group">
                            <div class="col-sm-3">
                                <label asp-for="BancoEmisorId">@T("Plugins.Payments.Transfer.Fields.IssuingBank")</label>
                            </div>
                            <div class="col-sm-6">
                                <nop-select asp-for="BancoEmisorId" asp-items="Model.BancoEmisor" />
                                <span asp-validation-for="BancoEmisorId"></span>
                            </div>

                        </div>*@

                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-sm-4">
                            <label asp-for="referencia">@T("Plugins.Payments.Transfer.Fields.Reference")</label>
                        </div>
                        <div class="col-sm-6">
                            <nop-editor asp-for="referencia" />
                            <span asp-validation-for="referencia" id="referenciaValidate"></span>
                        </div>

                    </div>
                    <div class="form-group">
                        <div class="col-sm-4">
                            <label asp-for="orden">@T("Plugins.Payments.Transfer.Fields.Order")</label>
                        </div>
                        <div class="col-sm-6">
                            <nop-editor asp-for="orden" />
                            <span asp-validation-for="orden" id="ordenValidate"></span>
                        </div>

                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-8 col-md-offset-4">
                    <button type="button" id="search-plugins-local" class="btn btn-primary btn-search">
                        <i class="fa fa-search"></i>
                        @T("Admin.Common.Search")
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-default panel-popup">
        @* <div id="transfer-grid"></div>*@

        <div id="grid"></div>
        <script>
            $("#grid").kendoGrid({
                columns: [
                    { sortable: false, field: "OrderId" },
                    { field: "ReceiverBankName" }
                ],
                sortable: true,
                dataSource: [
                    { OrderId: 1, ReceiverBankName: "A" },
                    { OrderId: 2, ReceiverBankName: "B" }
                ]
            });
        </script>

        <div class="panel-footer">
            <input type="submit" id="btnRefreshTransfer" class="btn btn-default" style="display: none" />
        </div>

        <script>
            $(document).ready(function () {
                $('#btnRefreshTransfer').click(function () {
                    //refresh grid
                    var grid = $("#transfer-grid").data('kendoGrid');
                    //grid.dataSource.page(1); //new search. Set page size to 1
                    grid.dataSource.read();

                    //return false to don't reload a page
                    return false;
                });

                $('#search-plugins-local').click(function () {
                    //refresh grid
                    var grid = $("#transfer-grid").data('kendoGrid');
                    //grid.dataSource.page(1); //new search. Set page size to 1
                    grid.dataSource.read();

                    //return false to don't reload a page
                    return false;
                });
            });
        </script>
        @*<script src="https://kendo.cdn.telerik.com/2020.1.406/js/jszip.min.js"></script>
            <script src="https://code.jquery.com/jquery-1.9.1.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/2.4.0/jszip.js"></script>
            <script src="https://kendo.cdn.telerik.com/2020.1.406/js/kendo.all.min.js"></script>*@
        <script type="text/javascript">

              var result;

            $(document).ready(function () {




    $.ajax({
        type: "POST",

                     url: "@Html.Raw(Url.Action("Search", "PaymentTransfer"))",
                     contentType: "application/json; charset=utf-8",
                      dataType: "json",
                       data:   { data:  JSON.stringify(function() {
                                   var data = {
                                               BancoEmisorId: $('#@Html.IdFor(model => model.BancoEmisorId)').val(),
                                               BancoReceptorId: $('#@Html.IdFor(model => model.BancoReceptorId)').val(),
                                               ID:0,
                                               referencia: $('#@Html.IdFor(model => model.referencia)').val(),
                                               orden: $('#@Html.IdFor(model => model.orden)').val(),
                                               PaymentStatus: 0,
                                             };
                                    addAntiForgeryToken(data);
                                    return data;
                                  })},


        success: function(response) {
            result = response;
             console.log("result: "+result);
        },
        error: function (e) {
               console.log(e);
            },

    });




                @*$("#transfer-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("Search", "PaymentTransfer"))",
                                        type: "POST",
                                        dataType: "json",
                                        data:
                                        function() {
                                            var data = {
                                                BancoEmisorId: $('#@Html.IdFor(model => model.BancoEmisorId)').val(),
                                                        BancoReceptorId: $('#@Html.IdFor(model => model.BancoReceptorId)').val(),
                                                        ID:0,
                                                        referencia: $('#@Html.IdFor(model => model.referencia)').val(),
                                                        orden: $('#@Html.IdFor(model => model.orden)').val(),
                                                        PaymentStatus: 0,
                                                    };
                                                   addAntiForgeryToken(data);
                                                    return data;
                                                }
                                    },
                                    destroy: {
                                        @*url: "@Html.Raw(Url.Action("Delete", "Bank"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    },
                                    sort: {
                                        field: "orden",
                                        dir: "desc"
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors",
                                    model: {
                                        id: "order"
                                    }
                                },
                                requestEnd: function (e) {
                                    if (e.type == "update") {
                                        this.read();
                                    }
                                },
                                error: function(e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                    pageSize: @(defaultGridPageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                    },
                            sortable: true,
                            pageable: {
                                refresh: true,
                                pageSizes: [@(gridPageSizes)],
                                @await Html.PartialAsync("_GridPagerMessages")
                            },
                            editable: {
                                confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                mode: "inline"
                            },
                            scrollable: false,
                            columns: [  {
                                field: "OrderId",
                                 width: 20,
                                 headerAttributes: { style: "text-align:center" },
                                attributes: { style: "text-align:center" },
                                title: "@T("Plugins.Payments.Transfer.Fields.Order")",
                                template: "<a href=@Url.Action("Edit", "Order")/#=OrderId# name='order#:OrderId#' id='order#:OrderId#'>#:OrderId#</a>"

                            },{
                                field: "ReceiverBankName",
                                width: 200,
                                title: "@T("Plugins.Payments.Transfer.Fields.ReceiverBank")"
                            }, {
                                field: "ReferenceNumber",
                                width: 50,
                                title: "@T("Plugins.Payments.Transfer.Fields.Reference")"
                                },
                                 {
                                field: "OrderTotal",
                                     width: 100,
                                     format: "{0:n2}",
                                title: "@T("Plugins.Payments.Transfer.Fields.OrderTotal") (@WorkingCurrencyCode)"
                                },
                               {
                                field: "OrderId",
                                title: "Pagar",
                                width: 100,
                                headerAttributes: { style: "text-align:center" },
                                attributes: { style: "text-align:center" },
                                template:"# if(PaymentStatusOrder==10) {#<a href=@Url.Action("UpdateStatePaymentTransfer", "PaymentTransfer")?orderid=#:OrderId# name='markorderaspaid#:OrderId#' id='markorderaspaid#:OrderId#' class='btn btn-primary'>@T("Admin.Orders.Fields.MarkAsPaid")</a> #} else {# <span class='grid-report-item green'>Consolidado</span> #}# "
                             }]
                        });*@
                    });
        </script>

    </div>
</div>
<script src="~/js/jquery.mask.min.js"></script>
<script type="text/javascript">
    $('#referencia').mask('0000000000');
</script>